
@model BookStoreEcommerce.Models.Entities.Book
@{
    ViewData["Title"] = "Delete Book - " + Model.Title;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 text-danger">
        <i class="fas fa-exclamation-triangle me-2"></i>
        Delete Book
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a asp-action="Details" asp-route-id="@Model.BookId" class="btn btn-sm btn-outline-info">
                <i class="fas fa-eye me-1"></i> View Details
            </a>
            <a asp-action="Index" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to List
            </a>
        </div>
    </div>
</div>

<!-- Danger Alert -->
<div class="row mb-4">
    <div class="col-12">
        <div class="alert alert-danger" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-triangle fa-3x me-3"></i>
                <div>
                    <h4 class="alert-heading mb-2">⚠️ DANGER: Permanent Deletion</h4>
                    <p class="mb-1">You are about to permanently delete this book from the system. This action <strong>CANNOT BE UNDONE</strong>.</p>
                    <p class="mb-0">All associated data including customer orders, reviews, and cart items will also be affected.</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Impact Analysis -->
@{
    var totalOrders = Model.OrderDetails.Select(od => od.Order).Distinct().Count();
    var totalSold = Model.OrderDetails.Sum(od => od.Quantity);
    var totalRevenue = Model.OrderDetails.Sum(od => od.TotalPrice);
    var totalReviews = Model.Feedbacks.Count();
    var approvedReviews = Model.Feedbacks.Count(f => f.IsApproved);
    var cartItems = Model.CartItems.Count();
}

<div class="row mb-4">
    <div class="col-12">
        <div class="card border-warning">
            <div class="card-header bg-warning text-dark">
                <h5 class="mb-0">
                    <i class="fas fa-chart-line me-2"></i>
                    Deletion Impact Analysis
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3 text-center mb-3">
                        <div class="border rounded p-3 @(totalOrders > 0 ? "border-danger bg-light" : "")">
                            <i class="fas fa-shopping-cart fa-2x @(totalOrders > 0 ? "text-danger" : "text-muted") mb-2"></i>
                            <h4 class="mb-0 @(totalOrders > 0 ? "text-danger" : "text-muted")">@totalOrders</h4>
                            <small class="@(totalOrders > 0 ? "text-danger" : "text-muted")">Orders Affected</small>
                            @if (totalOrders > 0)
                            {
                                <div class="mt-1">
                                    <small class="text-danger">⚠️ Historical data will be preserved</small>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-3 text-center mb-3">
                        <div class="border rounded p-3 @(totalSold > 0 ? "border-danger bg-light" : "")">
                            <i class="fas fa-box fa-2x @(totalSold > 0 ? "text-danger" : "text-muted") mb-2"></i>
                            <h4 class="mb-0 @(totalSold > 0 ? "text-danger" : "text-muted")">@totalSold</h4>
                            <small class="@(totalSold > 0 ? "text-danger" : "text-muted")">Units Sold</small>
                            @if (totalSold > 0)
                            {
                                <div class="mt-1">
                                    <small class="text-info">Total Revenue: $@totalRevenue.ToString("F2")</small>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-3 text-center mb-3">
                        <div class="border rounded p-3 @(totalReviews > 0 ? "border-danger bg-light" : "")">
                            <i class="fas fa-star fa-2x @(totalReviews > 0 ? "text-danger" : "text-muted") mb-2"></i>
                            <h4 class="mb-0 @(totalReviews > 0 ? "text-danger" : "text-muted")">@totalReviews</h4>
                            <small class="@(totalReviews > 0 ? "text-danger" : "text-muted")">Reviews</small>
                            @if (totalReviews > 0)
                            {
                                <div class="mt-1">
                                    <small class="text-info">@approvedReviews approved</small>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-3 text-center mb-3">
                        <div class="border rounded p-3 @(cartItems > 0 ? "border-danger bg-light" : "")">
                            <i class="fas fa-shopping-basket fa-2x @(cartItems > 0 ? "text-danger" : "text-muted") mb-2"></i>
                            <h4 class="mb-0 @(cartItems > 0 ? "text-danger" : "text-muted")">@cartItems</h4>
                            <small class="@(cartItems > 0 ? "text-danger" : "text-muted")">In Carts</small>
                            @if (cartItems > 0)
                            {
                                <div class="mt-1">
                                    <small class="text-danger">⚠️ Will be removed</small>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                
                @if (totalOrders > 0 || totalReviews > 0 || cartItems > 0)
                {
                    <div class="alert alert-warning mt-3 mb-0">
                        <h6 class="alert-heading">⚠️ Data Integrity Notice:</h6>
                        <ul class="mb-0">
                            @if (totalOrders > 0)
                            {
                                <li><strong>Order History:</strong> @totalOrders orders containing this book will maintain historical records, but the book reference will be marked as deleted.</li>
                            }
                            @if (totalReviews > 0)
                            {
                                <li><strong>Customer Reviews:</strong> All @totalReviews reviews for this book will be permanently deleted.</li>
                            }
                            @if (cartItems > 0)
                            {
                                <li><strong>Shopping Carts:</strong> This book will be removed from @cartItems customer shopping carts.</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Left Column - Book Information -->
    <div class="col-lg-8">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h5 class="mb-0">
                    <i class="fas fa-book me-2"></i>Book to be Deleted
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3 text-center">
                        <img src="@(Model.ImageUrl ?? "/images/no-image.jpg")" 
                             class="img-fluid rounded shadow-sm mb-3" 
                             style="max-height: 200px; max-width: 100%; opacity: 0.7;" 
                             alt="@Model.Title">
                        <div class="text-danger">
                            <i class="fas fa-times-circle"></i>
                            <small>Will be deleted</small>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <dl class="row">
                            <dt class="col-sm-4">Title:</dt>
                            <dd class="col-sm-8">
                                <h4 class="text-danger mb-0">@Model.Title</h4>
                            </dd>
                            
                            <dt class="col-sm-4">Author:</dt>
                            <dd class="col-sm-8">
                                <h5 class="text-muted mb-0">@Model.Author</h5>
                            </dd>
                            
                            <dt class="col-sm-4">Category:</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-secondary">@Model.Category.Name</span>
                            </dd>
                            
                            <dt class="col-sm-4">Price:</dt>
                            <dd class="col-sm-8">
                                <h4 class="text-success mb-0">$@Model.Price.ToString("F2")</h4>
                            </dd>
                            
                            <dt class="col-sm-4">Current Stock:</dt>
                            <dd class="col-sm-8">
                                @if (Model.StockQuantity == 0)
                                {
                                    <span class="badge bg-danger">Out of Stock</span>
                                }
                                else if (Model.StockQuantity < 10)
                                {
                                    <span class="badge bg-warning text-dark">@Model.StockQuantity units (Low Stock)</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">@Model.StockQuantity units</span>
                                }
                            </dd>
                            
                            <dt class="col-sm-4">ISBN:</dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.ISBN))
                                {
                                    <code>@Model.ISBN</code>
                                }
                                else
                                {
                                    <span class="text-muted">Not specified</span>
                                }
                            </dd>
                            
                            <dt class="col-sm-4">Publisher:</dt>
                            <dd class="col-sm-8">@(Model.Publisher ?? "Not specified")</dd>
                            
                            <dt class="col-sm-4">Status:</dt>
                            <dd class="col-sm-8">
                                @if (Model.IsActive)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check-circle me-1"></i>Active
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">
                                        <i class="fas fa-pause-circle me-1"></i>Inactive
                                    </span>
                                }
                            </dd>
                        </dl>
                        
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <hr>
                            <h6 class="text-muted">Description:</h6>
                            <p class="text-justify">@Model.Description</p>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Alternative Actions -->
        <div class="card mt-4 border-info">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">
                    <i class="fas fa-lightbulb me-2"></i>Consider These Alternatives
                </h5>
            </div>
            <div class="card-body">
                <p>Instead of permanently deleting this book, you might want to consider:</p>
                <div class="row">
                    <div class="col-md-6">
                        <div class="d-grid gap-2">
                            <a asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-outline-primary">
                                <i class="fas fa-edit me-2"></i>Edit Book Details
                            </a>
                            <button type="button" class="btn btn-outline-warning" onclick="toggleStatus(@Model.BookId, @Model.IsActive.ToString().ToLower())">
                                <i class="fas fa-@(Model.IsActive ? "pause" : "play") me-2"></i>
                                @(Model.IsActive ? "Deactivate" : "Activate") Book
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-outline-info" onclick="setZeroStock()">
                                <i class="fas fa-box me-2"></i>Set Stock to Zero
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="archiveBook()">
                                <i class="fas fa-archive me-2"></i>Archive Book
                            </button>
                        </div>
                    </div>
                </div>
                <div class="alert alert-light mt-3 mb-0">
                    <small class="text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        <strong>Tip:</strong> Deactivating or archiving preserves historical data while removing the book from customer view.
                    </small>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Right Column - Confirmation Panel -->
    <div class="col-lg-4">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h5 class="mb-0">
                    <i class="fas fa-trash me-2"></i>Confirm Deletion
                </h5>
            </div>
            <div class="card-body">
                <div class="alert alert-danger">
                    <h6 class="alert-heading">⚠️ Final Warning</h6>
                    <p class="mb-0">This action will permanently delete:</p>
                    <ul class="mt-2 mb-0">
                        <li>Book information and details</li>
                        <li>All customer reviews (@totalReviews)</li>
                        <li>Current cart items (@cartItems)</li>
                        <li>Stock and inventory data</li>
                    </ul>
                </div>
                
                <form asp-action="Delete" method="post" id="deleteForm" class="mt-3">
                    <input type="hidden" asp-for="BookId" />
                    
                    <div class="form-group mb-3">
                        <label for="confirmationText" class="form-label fw-bold">
                            Type "DELETE" to confirm:
                        </label>
                        <input type="text" id="confirmationText" class="form-control" 
                               placeholder="Type DELETE here" autocomplete="off" required>
                        <div class="form-text text-danger">
                            You must type "DELETE" exactly as shown to proceed.
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label for="deleteReason" class="form-label fw-bold">
                            Reason for deletion:
                        </label>
                        <textarea id="deleteReason" name="deleteReason" class="form-control" rows="3" 
                                  placeholder="Please provide a reason for deleting this book..." required></textarea>
                        <div class="form-text">
                            This will be logged for audit purposes.
                        </div>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="confirmUnderstanding" required>
                        <label class="form-check-label" for="confirmUnderstanding">
                            I understand this action cannot be undone
                        </label>
                    </div>
                    
                    <div class="form-check mb-4">
                        <input class="form-check-input" type="checkbox" id="confirmBackup" required>
                        <label class="form-check-label" for="confirmBackup">
                            I have backed up any necessary data
                        </label>
                    </div>
                    
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-danger btn-lg" id="deleteButton" disabled>
                            <i class="fas fa-trash me-2"></i>
                            DELETE BOOK PERMANENTLY
                        </button>
                        <a asp-action="Details" asp-route-id="@Model.BookId" class="btn btn-outline-info">
                            <i class="fas fa-eye me-2"></i>Review Details
                        </a>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-2"></i>Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- System Information -->
        <div class="card mt-4">
            <div class="card-header bg-light">
                <h6 class="mb-0">
                    <i class="fas fa-info-circle me-2"></i>System Information
                </h6>
            </div>
            <div class="card-body">
                <dl class="row small">
                    <dt class="col-sm-6">Book ID:</dt>
                    <dd class="col-sm-6">#@Model.BookId</dd>
                    
                    <dt class="col-sm-6">Created:</dt>
                    <dd class="col-sm-6">@Model.CreatedDate.ToString("MMM dd, yyyy")</dd>
                    
                    <dt class="col-sm-6">Last Updated:</dt>
                    <dd class="col-sm-6">@Model.UpdatedDate.ToString("MMM dd, yyyy")</dd>
                    
                    <dt class="col-sm-6">Days Active:</dt>
                    <dd class="col-sm-6">@((DateTime.Now - Model.CreatedDate).Days) days</dd>
                </dl>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Enable delete button only when all conditions are met
            function checkFormValidity() {
                const confirmationText = $('#confirmationText').val();
                const deleteReason = $('#deleteReason').val().trim();
                const confirmUnderstanding = $('#confirmUnderstanding').is(':checked');
                const confirmBackup = $('#confirmBackup').is(':checked');
                
                const isValid = confirmationText === 'DELETE' && 
                               deleteReason.length > 0 && 
                               confirmUnderstanding && 
                               confirmBackup;
                
                $('#deleteButton').prop('disabled', !isValid);
                
                // Visual feedback
                if (confirmationText === 'DELETE') {
                    $('#confirmationText').removeClass('is-invalid').addClass('is-valid');
                } else if (confirmationText.length > 0) {
                    $('#confirmationText').removeClass('is-valid').addClass('is-invalid');
                } else {
                    $('#confirmationText').removeClass('is-valid is-invalid');
                }
            }
            
            // Bind event handlers
            $('#confirmationText, #deleteReason').on('input', checkFormValidity);
            $('#confirmUnderstanding, #confirmBackup').on('change', checkFormValidity);
            
            // Form submission confirmation
            $('#deleteForm').on('submit', function(e) {
                if (!confirm('ARE YOU ABSOLUTELY SURE? This will permanently delete the book and cannot be undone!')) {
                    e.preventDefault();
                    return false;
                }
                
                // Show loading state
                $('#deleteButton').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Deleting...');
            });
            
            // Prevent accidental form submission
            $(document).on('keydown', function(e) {
                if (e.ctrlKey && e.which === 13) { // Ctrl + Enter
                    e.preventDefault();
                    if (!$('#deleteButton').prop('disabled')) {
                        $('#deleteForm').submit();
                    }
                }
            });
            
            // Auto-focus on confirmation text
            $('#confirmationText').focus();
        });
        
        // Alternative action functions
        function toggleStatus(bookId, isCurrentlyActive) {
            const action = isCurrentlyActive ? 'deactivate' : 'activate';
            const message = `${action.charAt(0).toUpperCase() + action.slice(1)} this book instead of deleting it?`;
            
            if (confirm(message)) {
                $.post('@Url.Action("ToggleStatus", "BookManagement")', { id: bookId }, function(data) {
                    if (data.success) {
                        showAlert(`Book ${action}d successfully! Redirecting...`, 'success');
                        setTimeout(function() {
                            window.location.href = '@Url.Action("Index", "BookManagement")';
                        }, 2000);
                    } else {
                        showAlert('Error: ' + data.message, 'danger');
                    }
                }).fail(function() {
                    showAlert('An error occurred while updating book status.', 'danger');
                });
            }
        }
        
        function setZeroStock() {
            if (confirm('Set stock to zero instead of deleting the book?')) {
                $.post('@Url.Action("UpdateStock", "BookManagement")', { 
                    bookId: @Model.BookId, 
                    quantity: 0,
                    reason: 'Stock set to zero as alternative to deletion'
                }, function(data) {
                    if (data.success) {
                        showAlert('Stock set to zero successfully! Redirecting...', 'success');
                        setTimeout(function() {
                            window.location.href = '@Url.Action("Details", "BookManagement", new { id = Model.BookId })';
                        }, 2000);
                    } else {
                        showAlert('Error: ' + data.message, 'danger');
                    }
                }).fail(function() {
                    showAlert('An error occurred while updating stock.', 'danger');
                });
            }
        }
        
        function archiveBook() {
            showAlert('Archive functionality coming soon! Consider deactivating the book instead.', 'info');
        }
        
        // Alert helper function
        function showAlert(message, type = 'info') {
            const alertClass = `alert-${type}`;
            const iconClass = type === 'danger' ? 'fa-exclamation-triangle' : 
                             type === 'success' ? 'fa-check-circle' : 'fa-info-circle';
            
            const alert = $(`
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    <i class="fas ${iconClass} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `);
            
            $('.border-bottom').after(alert);
            setTimeout(() => alert.alert('close'), 5000);
            $('html, body').animate({ scrollTop: 0 }, 500);
        }
    </script>
    
    <style>
        .text-justify {
            text-align: justify;
        }
        
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: 1px solid rgba(0, 0, 0, 0.125);
        }
        
        .card-header {
            font-weight: 600;
            border-bottom: 1px solid rgba(0, 0, 0, 0.125);
        }
        
        .border-danger {
            border-color: #dc3545 !important;
        }
        
        .border-warning {
            border-color: #ffc107 !important;
        }
        
        .border-info {
            border-color: #0dcaf0 !important;
        }
        
        .btn-danger:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        
        .is-valid {
            border-color: #198754;
        }
        
        .is-invalid {
            border-color: #dc3545;
        }
        
        .alert {
            border: none;
            border-radius: 0.5rem;
        }
        
        .badge {
            font-size: 0.875em;
        }
        
        dt {
            font-weight: 600;
            color: #495057;
        }
        
        dd {
            margin-bottom: 0.5rem;
        }
        
        .form-text {
            font-size: 0.875em;
        }
        
        .img-fluid {
            filter: grayscale(20%);
        }
        
        .btn-lg {
            padding: 0.75rem 1.5rem;
            font-size: 1.1rem;
            font-weight: 600;
        }
        
        .alert-heading {
            font-weight: 600;
        }
        
        .form-check-input:checked {
            background-color: #dc3545;
            border-color: #dc3545;
        }
        
        .d-grid .btn + .btn {
            margin-top: 0.5rem;
        }
    </style>
}
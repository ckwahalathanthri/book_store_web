@model IEnumerable<BookStoreEcommerce.Models.ViewModels.CustomerManagementViewModel>
@{
    ViewData["Title"] = "Customer Management";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Customer Management</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a asp-action="Statistics" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-chart-bar"></i> Statistics
            </a>
            <a asp-action="Export" asp-route-format="csv" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-download"></i> Export CSV
            </a>
        </div>
    </div>
</div>

<!-- Search and Filters -->
<div class="row mb-3">
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="d-flex">
            <input type="text" name="search" class="form-control me-2" placeholder="Search customers..." value="@ViewBag.SearchTerm">
            <button type="submit" class="btn btn-outline-primary">
                <i class="fas fa-search"></i> Search
            </button>
        </form>
    </div>
    <div class="col-md-6">
        <div class="text-end">
            <small class="text-muted">
                Showing @Model.Count() of @ViewBag.TotalCustomers customers
            </small>
        </div>
    </div>
</div>

<!-- Customers Table -->
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Customer</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Registration Date</th>
                <th>Orders</th>
                <th>Total Spent</th>
                <th>Last Order</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Model)
            {
                <tr id="customer-row-@customer.UserId">
                    <td>
                        <div>
                            <strong>@customer.FullName</strong>
                            @if (!string.IsNullOrEmpty(customer.Address))
                            {
                                <br><small class="text-muted">@customer.Address</small>
                            }
                        </div>
                    </td>
                    <td>@customer.Email</td>
                    <td>@(customer.Phone ?? "N/A")</td>
                    <td>@customer.RegistrationDate.ToString("MMM dd, yyyy")</td>
                    <td>
                        <span class="badge bg-info">@customer.TotalOrders</span>
                    </td>
                    <td>
                        <strong>$@customer.TotalSpent.ToString("F2")</strong>
                    </td>
                    <td>
                        @if (customer.LastOrderDate.HasValue)
                        {
                            @customer.LastOrderDate.Value.ToString("MMM dd, yyyy")
                        }
                        else
                        {
                            <span class="text-muted">No orders</span>
                        }
                    </td>
                    <td>
                        <span class="badge bg-@(customer.IsActive ? "success" : "danger")">
                            @(customer.IsActive ? "Active" : "Inactive")
                        </span>
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Details" asp-route-id="@customer.UserId" 
                               class="btn btn-sm btn-outline-primary" title="View Details">
                                <i class="fas fa-eye"></i>
                            </a>
                            <button type="button" class="btn btn-sm btn-outline-warning" 
                                    onclick="toggleCustomerStatus(@customer.UserId, @customer.IsActive.ToString().ToLower())"
                                    title="@(customer.IsActive ? "Deactivate" : "Activate")">
                                <i class="fas fa-@(customer.IsActive ? "ban" : "check")"></i>
                            </button>
                            @if (customer.TotalOrders == 0)
                            {
                                <button type="button" class="btn btn-sm btn-outline-danger" 
                                        onclick="deleteCustomer(@customer.UserId)" title="Delete">
                                    <i class="fas fa-trash"></i>
                                </button>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-users fa-3x text-muted mb-3"></i>
        <h4>No customers found</h4>
        <p class="text-muted">
            @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
            {
                <text>Try adjusting your search criteria.</text>
            }
            else
            {
                <text>No customers have registered yet.</text>
            }
        </p>
    </div>
}

<!-- Pagination -->
@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Customer pagination">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" 
                       asp-action="Index" 
                       asp-route-page="@i" 
                       asp-route-search="@ViewBag.SearchTerm">@i</a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <script>
        function toggleCustomerStatus(customerId, isCurrentlyActive) {
            const action = isCurrentlyActive ? 'deactivate' : 'activate';
            const message = `Are you sure you want to ${action} this customer?`;
            
            if (confirm(message)) {
                $.post('@Url.Action("ToggleStatus")', { id: customerId }, function(data) {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                }).fail(function() {
                    alert('An error occurred while updating customer status.');
                });
            }
        }
        
        function deleteCustomer(customerId) {
            if (confirm('Are you sure you want to delete this customer? This action cannot be undone.')) {
                $.post('@Url.Action("Delete")', { id: customerId }, function(data) {
                    if (data.success) {
                        alert(data.message);
                        $('#customer-row-' + customerId).fadeOut();
                    } else {
                        alert('Error: ' + data.message);
                    }
                }).fail(function() {
                    alert('An error occurred while deleting the customer.');
                });
            }
        }
    </script>
}

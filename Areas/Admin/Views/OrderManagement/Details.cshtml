@model BookStoreEcommerce.Models.Entities.Order
@{
    ViewData["Title"] = "Order Details - " + Model.OrderNumber;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">
        <i class="fas fa-shopping-cart me-2"></i>
        Order Details - #@Model.OrderNumber
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
                <i class="fas fa-cogs me-1"></i> Actions
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" onclick="printInvoice(@Model.OrderId)">
                    <i class="fas fa-print me-2"></i>Print Invoice
                </a></li>
                <li><a class="dropdown-item" href="#" onclick="downloadInvoice(@Model.OrderId)">
                    <i class="fas fa-file-pdf me-2"></i>Download PDF
                </a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="#" onclick="sendEmailToCustomer(@Model.OrderId)">
                    <i class="fas fa-envelope me-2"></i>Email Customer
                </a></li>
                <li><a class="dropdown-item" href="#" onclick="sendTrackingInfo(@Model.OrderId)">
                    <i class="fas fa-shipping-fast me-2"></i>Send Tracking Info
                </a></li>
            </ul>
        </div>
        <div class="btn-group">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to Orders
            </a>
        </div>
    </div>
</div>

<!-- Order Status Alert -->
<div class="row mb-4">
    <div class="col-12">
        @{
            var alertClass = Model.OrderStatus switch {
                OrderStatus.Pending => "alert-warning",
                OrderStatus.Processing => "alert-info",
                OrderStatus.Shipped => "alert-primary",
                OrderStatus.Delivered => "alert-success",
                OrderStatus.Cancelled => "alert-danger",
                _ => "alert-secondary"
            };
            
            var alertIcon = Model.OrderStatus switch {
                OrderStatus.Pending => "fa-clock",
                OrderStatus.Processing => "fa-cogs",
                OrderStatus.Shipped => "fa-shipping-fast",
                OrderStatus.Delivered => "fa-check-circle",
                OrderStatus.Cancelled => "fa-times-circle",
                _ => "fa-info-circle"
            };
        }
        <div class="alert @alertClass" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas @alertIcon fa-2x me-3"></i>
                <div class="flex-grow-1">
                    <h4 class="alert-heading mb-1">Order Status: @Model.OrderStatus</h4>
                    <p class="mb-0">
                        @switch (Model.OrderStatus)
                        {
                            case OrderStatus.Pending:
                                <text>This order is pending and awaiting processing.</text>
                                break;
                            case OrderStatus.Processing:
                                <text>This order is currently being processed and prepared for shipment.</text>
                                break;
                            case OrderStatus.Shipped:
                                <text>This order has been shipped and is on its way to the customer.</text>
                                break;
                            case OrderStatus.Delivered:
                                <text>This order has been successfully delivered to the customer.</text>
                                break;
                            case OrderStatus.Cancelled:
                                <text>This order has been cancelled.</text>
                                break;
                        }
                    </p>
                </div>
                @if (Model.OrderStatus != OrderStatus.Delivered && Model.OrderStatus != OrderStatus.Cancelled)
                {
                    <div>
                        <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#statusUpdateModal">
                            <i class="fas fa-edit me-1"></i> Update Status
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Left Column - Order Information -->
    <div class="col-lg-8">
        <!-- Order Header Information -->
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-info-circle me-2"></i>Order Information
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-5">Order Number:</dt>
                            <dd class="col-sm-7">
                                <h5 class="text-primary mb-0">#@Model.OrderNumber</h5>
                            </dd>
                            
                            <dt class="col-sm-5">Order Date:</dt>
                            <dd class="col-sm-7">@Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</dd>
                            
                            <dt class="col-sm-5">Total Amount:</dt>
                            <dd class="col-sm-7">
                                <h4 class="text-success mb-0">$@Model.TotalAmount.ToString("F2")</h4>
                            </dd>
                            
                            <dt class="col-sm-5">Payment Method:</dt>
                            <dd class="col-sm-7">@(Model.PaymentMethod ?? "Not specified")</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-5">Order Status:</dt>
                            <dd class="col-sm-7">
                                <span class="badge bg-@(Model.OrderStatus switch {
                                    OrderStatus.Pending => "warning",
                                    OrderStatus.Processing => "info",
                                    OrderStatus.Shipped => "primary",
                                    OrderStatus.Delivered => "success",
                                    OrderStatus.Cancelled => "danger",
                                    _ => "secondary"
                                }) fs-6">
                                    @Model.OrderStatus
                                </span>
                            </dd>
                            
                            <dt class="col-sm-5">Payment Status:</dt>
                            <dd class="col-sm-7">
                                <span class="badge bg-@(Model.PaymentStatus switch {
                                    PaymentStatus.Pending => "warning",
                                    PaymentStatus.Paid => "success",
                                    PaymentStatus.Failed => "danger",
                                    PaymentStatus.Refunded => "info",
                                    _ => "secondary"
                                }) fs-6">
                                    @Model.PaymentStatus
                                </span>
                            </dd>
                            
                            @if (Model.ShippedDate.HasValue)
                            {
                                <dt class="col-sm-5">Shipped Date:</dt>
                                <dd class="col-sm-7">@Model.ShippedDate.Value.ToString("MMM dd, yyyy HH:mm")</dd>
                            }
                            
                            @if (Model.DeliveredDate.HasValue)
                            {
                                <dt class="col-sm-5">Delivered Date:</dt>
                                <dd class="col-sm-7">@Model.DeliveredDate.Value.ToString("MMM dd, yyyy HH:mm")</dd>
                            }
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <!-- Customer Information -->
        <div class="card mb-4">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">
                    <i class="fas fa-user me-2"></i>Customer Information
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="d-flex align-items-center mb-3">
                            <div class="avatar-lg bg-light rounded-circle me-3 d-flex align-items-center justify-content-center">
                                <i class="fas fa-user fa-2x text-muted"></i>
                            </div>
                            <div>
                                <h5 class="mb-1">@Model.Customer.User.FullName</h5>
                                <p class="mb-0 text-muted">Customer since @Model.Customer.User.CreatedDate.ToString("MMM yyyy")</p>
                            </div>
                        </div>
                        
                        <dl class="row">
                            <dt class="col-sm-4">Email:</dt>
                            <dd class="col-sm-8">
                                <a href="mailto:@Model.Customer.User.Email" class="text-decoration-none">
                                    @Model.Customer.User.Email
                                </a>
                            </dd>
                            
                            <dt class="col-sm-4">Phone:</dt>
                            <dd class="col-sm-8">@(Model.Customer.User.Phone ?? "Not provided")</dd>
                            
                            <dt class="col-sm-4">Customer ID:</dt>
                            <dd class="col-sm-8">#@Model.Customer.CustomerId</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6 class="text-muted mb-2">Shipping Address:</h6>
                        <div class="border rounded p-3 bg-light">
                            <i class="fas fa-map-marker-alt me-2 text-primary"></i>
                            @Model.ShippingAddress
                        </div>
                        
                        <div class="mt-3">
                            <a asp-controller="CustomerManagement" asp-action="Details" asp-route-id="@Model.Customer.UserId" 
                               class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-user-cog me-1"></i> View Customer Profile
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="card mb-4">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0">
                    <i class="fas fa-shopping-bag me-2"></i>Order Items (@Model.OrderDetails.Count() items)
                </h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Book Details</th>
                                <th>Unit Price</th>
                                <th>Quantity</th>
                                <th>Total Price</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderDetails)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <img src="@(item.Book.ImageUrl ?? "/images/no-image.jpg")" 
                                                 class="me-3 rounded" style="width: 60px; height: 60px; object-fit: cover;" alt="@item.Book.Title">
                                            <div>
                                                <h6 class="mb-1">@item.Book.Title</h6>
                                                <small class="text-muted">by @item.Book.Author</small>
                                                @if (!string.IsNullOrEmpty(item.Book.ISBN))
                                                {
                                                    <br><small class="text-info">ISBN: @item.Book.ISBN</small>
                                                }
                                                <br><span class="badge bg-secondary">@item.Book?.Category?.Name</span>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <strong>$@item.UnitPrice.ToString("F2")</strong>
                                    </td>
                                    <td>
                                        <span class="badge bg-primary fs-6">@item.Quantity</span>
                                    </td>
                                    <td>
                                        <strong class="text-success">$@item.TotalPrice.ToString("F2")</strong>
                                    </td>
                                    <td>
                                        <a asp-area="Admin" asp-controller="BookManagement" asp-action="Details" asp-route-id="@item.Book.BookId" 
                                           class="btn btn-sm btn-outline-primary" title="View Book Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-light">
                            <tr>
                                <th colspan="3" class="text-end">Total Amount:</th>
                                <th class="text-success">
                                    <h5 class="mb-0">$@Model.TotalAmount.ToString("F2")</h5>
                                </th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Right Column - Order Timeline & Actions -->
    <div class="col-lg-4">
        <!-- Quick Actions -->
        <div class="card mb-4">
            <div class="card-header bg-warning text-dark">
                <h5 class="mb-0">
                    <i class="fas fa-bolt me-2"></i>Quick Actions
                </h5>
            </div>
            <div class="card-body">
                @if (Model.OrderStatus == OrderStatus.Pending)
                {
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-success" onclick="updateOrderStatus(@Model.OrderId, 'Processing')">
                            <i class="fas fa-play me-2"></i>Start Processing
                        </button>
                        <button type="button" class="btn btn-outline-danger" onclick="cancelOrder(@Model.OrderId)">
                            <i class="fas fa-times me-2"></i>Cancel Order
                        </button>
                    </div>
                }
                else if (Model.OrderStatus == OrderStatus.Processing)
                {
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-primary" onclick="updateOrderStatus(@Model.OrderId, 'Shipped')">
                            <i class="fas fa-shipping-fast me-2"></i>Mark as Shipped
                        </button>
                        <button type="button" class="btn btn-outline-secondary" onclick="updateOrderStatus(@Model.OrderId, 'Pending')">
                            <i class="fas fa-arrow-left me-2"></i>Back to Pending
                        </button>
                    </div>
                }
                else if (Model.OrderStatus == OrderStatus.Shipped)
                {
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-success" onclick="updateOrderStatus(@Model.OrderId, 'Delivered')">
                            <i class="fas fa-check-circle me-2"></i>Mark as Delivered
                        </button>
                        <button type="button" class="btn btn-outline-info" onclick="sendTrackingInfo(@Model.OrderId)">
                            <i class="fas fa-map-marker-alt me-2"></i>Send Tracking
                        </button>
                    </div>
                }
                else if (Model.OrderStatus == OrderStatus.Delivered)
                {
                    <div class="alert alert-success mb-3">
                        <i class="fas fa-check-circle me-2"></i>
                        Order completed successfully!
                    </div>
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary" onclick="requestFeedback(@Model.OrderId)">
                            <i class="fas fa-star me-2"></i>Request Feedback
                        </button>
                    </div>
                }
                
                <hr>
                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-outline-secondary" onclick="printInvoice(@Model.OrderId)">
                        <i class="fas fa-print me-2"></i>Print Invoice
                    </button>
                    <button type="button" class="btn btn-outline-info" onclick="sendEmailToCustomer(@Model.OrderId)">
                        <i class="fas fa-envelope me-2"></i>Email Customer
                    </button>
                </div>
            </div>
        </div>

        <!-- Order Timeline -->
        <div class="card mb-4">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-history me-2"></i>Order Timeline
                </h5>
            </div>
            <div class="card-body">
                <div class="timeline">
                    <div class="timeline-item">
                        <div class="timeline-marker bg-primary"></div>
                        <div class="timeline-content">
                            <h6 class="mb-1">Order Placed</h6>
                            <p class="mb-1 text-muted">Order #@Model.OrderNumber was placed</p>
                            <small class="text-muted">@Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</small>
                        </div>
                    </div>
                    
                    @if (Model.OrderStatus != OrderStatus.Pending)
                    {
                        <div class="timeline-item">
                            <div class="timeline-marker bg-info"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Processing Started</h6>
                                <p class="mb-1 text-muted">Order moved to processing</p>
                                <small class="text-muted">@Model.OrderDate.AddHours(1).ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>
                    }
                    
                    @if (Model.ShippedDate.HasValue)
                    {
                        <div class="timeline-item">
                            <div class="timeline-marker bg-primary"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Order Shipped</h6>
                                <p class="mb-1 text-muted">Package dispatched for delivery</p>
                                <small class="text-muted">@Model.ShippedDate.Value.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>
                    }
                    
                    @if (Model.DeliveredDate.HasValue)
                    {
                        <div class="timeline-item">
                            <div class="timeline-marker bg-success"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Order Delivered</h6>
                                <p class="mb-1 text-muted">Successfully delivered to customer</p>
                                <small class="text-muted">@Model.DeliveredDate.Value.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>
                    }
                    
                    @if (Model.OrderStatus == OrderStatus.Cancelled)
                    {
                        <div class="timeline-item">
                            <div class="timeline-marker bg-danger"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Order Cancelled</h6>
                                <p class="mb-1 text-muted">Order was cancelled</p>
                                <small class="text-muted">@DateTime.Now.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="card">
            <div class="card-header bg-light">
                <h5 class="mb-0">
                    <i class="fas fa-calculator me-2"></i>Order Summary
                </h5>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-6 mb-3">
                        <div class="border rounded p-3">
                            <h4 class="text-primary mb-0">@Model.OrderDetails.Count()</h4>
                            <small class="text-muted">Total Items</small>
                        </div>
                    </div>
                    <div class="col-6 mb-3">
                        <div class="border rounded p-3">
                            <h4 class="text-info mb-0">@Model.OrderDetails.Sum(od => od.Quantity)</h4>
                            <small class="text-muted">Total Quantity</small>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="border rounded p-3 bg-light">
                            <h4 class="text-success mb-0">$@Model.TotalAmount.ToString("F2")</h4>
                            <small class="text-muted">Total Amount</small>
                        </div>
                    </div>
                </div>
                
                <hr>
                
                <div class="small">
                    <div class="d-flex justify-content-between mb-1">
                        <span>Subtotal:</span>
                        <span>$@Model.OrderDetails.Sum(od => od.TotalPrice).ToString("F2")</span>
                    </div>
                    <div class="d-flex justify-content-between mb-1">
                        <span>Shipping:</span>
                        <span>Free</span>
                    </div>
                    <div class="d-flex justify-content-between mb-1">
                        <span>Tax:</span>
                        <span>Included</span>
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between fw-bold">
                        <span>Total:</span>
                        <span class="text-success">$@Model.TotalAmount.ToString("F2")</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Status Update Modal -->
<div class="modal fade" id="statusUpdateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Order Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="statusUpdateForm">
                    <div class="mb-3">
                        <label class="form-label">Current Order:</label>
                        <input type="text" class="form-control" value="#@Model.OrderNumber" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Current Status:</label>
                        <input type="text" class="form-control" value="@Model.OrderStatus" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="newOrderStatus" class="form-label">New Status:</label>
                        <select id="newOrderStatus" class="form-select" required>
                            <option value="">Select New Status</option>
                            @if (Model.OrderStatus == OrderStatus.Pending)
                            {
                                <option value="Processing">Processing</option>
                                <option value="Cancelled">Cancelled</option>
                            }
                            @if (Model.OrderStatus == OrderStatus.Processing)
                            {
                                <option value="Pending">Back to Pending</option>
                                <option value="Shipped">Shipped</option>
                                <option value="Cancelled">Cancelled</option>
                            }
                            @if (Model.OrderStatus == OrderStatus.Shipped)
                            {
                                <option value="Processing">Back to Processing</option>
                                <option value="Delivered">Delivered</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="statusNotes" class="form-label">Notes (Optional):</label>
                        <textarea id="statusNotes" class="form-control" rows="3" 
                                  placeholder="Enter any notes about this status update..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveStatusUpdate()">Update Status</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Order status management
        function updateOrderStatus(orderId, status) {
            if (confirm(`Update order status to ${status}?`)) {
                $.post('@Url.Action("UpdateStatus")', { 
                    orderId: orderId, 
                    status: status 
                }, function(data) {
                    if (data.success) {
                        showAlert('Order status updated successfully!', 'success');
                        setTimeout(function() {
                            location.reload();
                        }, 1500);
                    } else {
                        showAlert('Error: ' + data.message, 'danger');
                    }
                }).fail(function() {
                    showAlert('An error occurred while updating order status.', 'danger');
                });
            }
        }
        
        function saveStatusUpdate() {
            const newStatus = $('#newOrderStatus').val();
            const notes = $('#statusNotes').val();
            
            if (!newStatus) {
                showAlert('Please select a new status.', 'warning');
                return;
            }
            
            $.post('@Url.Action("UpdateStatus")', { 
                orderId: @Model.OrderId, 
                status: newStatus,
                notes: notes 
            }, function(data) {
                if (data.success) {
                    bootstrap.Modal.getInstance(document.getElementById('statusUpdateModal')).hide();
                    showAlert('Order status updated successfully!', 'success');
                    setTimeout(function() {
                        location.reload();
                    }, 1500);
                } else {
                    showAlert('Error: ' + data.message, 'danger');
                }
            }).fail(function() {
                showAlert('An error occurred while updating order status.', 'danger');
            });
        }
        
        function cancelOrder(orderId) {
            if (confirm('Are you sure you want to cancel this order? This action cannot be undone.')) {
                updateOrderStatus(orderId, 'Cancelled');
            }
        }
        
        // Communication functions
        function sendEmailToCustomer(orderId) {
            if (confirm('Send order update email to customer?')) {
                $.post('@Url.Action("SendEmail")', { orderId: orderId }, function(data) {
                    if (data.success) {
                        showAlert('Email sent successfully to customer!', 'success');
                    } else {
                        showAlert('Error sending email: ' + data.message, 'danger');
                    }
                }).fail(function() {
                    showAlert('Email sending feature coming soon!', 'info');
                });
            }
        }
        
        function sendTrackingInfo(orderId) {
            showAlert('Tracking information feature coming soon!', 'info');
        }
        
        function requestFeedback(orderId) {
            if (confirm('Send feedback request email to customer?')) {
                showAlert('Feedback request feature coming soon!', 'info');
            }
        }
        
        // Print and download functions
        function printInvoice(orderId) {
            // Open print-friendly version
            window.open(`@Url.Action("PrintInvoice")?orderId=${orderId}`, '_blank');
        }
        
        function downloadInvoice(orderId) {
            window.location.href = `@Url.Action("DownloadInvoice")?orderId=${orderId}`;
        }
        
        // Alert helper function
        function showAlert(message, type = 'info') {
            const alertClass = `alert-${type}`;
            const iconClass = type === 'danger' ? 'fa-exclamation-triangle' : 
                             type === 'success' ? 'fa-check-circle' : 
                             type === 'warning' ? 'fa-exclamation-triangle' : 'fa-info-circle';
            
            const alert = $(`
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    <i class="fas ${iconClass} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `);
            
            $('.border-bottom').after(alert);
            
            // Auto dismiss after 5 seconds
            setTimeout(() => {
                alert.alert('close');
            }, 5000);
            
            // Scroll to top to show alert
            $('html, body').animate({ scrollTop: 0 }, 500);
        }
    </script>
    
    <style>
        .avatar-lg {
            width: 60px;
            height: 60px;
            font-size: 1.5rem;
        }
        
        .timeline {
            position: relative;
            padding-left: 30px;
        }
        
        .timeline::before {
            content: '';
            position: absolute;
            left: 15px;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #e9ecef;
        }
        
        .timeline-item {
            position: relative;
            margin-bottom: 30px;
        }
        
        .timeline-item:last-child {
            margin-bottom: 0;
        }
        
        .timeline-marker {
            position: absolute;
            left: -22px;
            top: 0;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: 3px solid #fff;
            box-shadow: 0 0 0 2px #e9ecef;
        }
        
        .timeline-content {
            margin-left: 15px;
        }
        
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: 1px solid rgba(0, 0, 0, 0.125);
        }
        
        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid rgba(0, 0, 0, 0.125);
            font-weight: 600;
        }
        
        .badge.fs-6 {
            font-size: 0.875rem !important;
            padding: 0.375rem 0.75rem;
        }
        
        .table th {
            border-top: none;
            font-weight: 600;
            background-color: #f8f9fa;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        .btn-group .btn {
            border-radius: 0;
        }
        
        .btn-group .btn:first-child {
            border-top-left-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
        }
        
        .btn-group .btn:last-child {
            border-top-right-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
        }
        
        .fw-bold {
            font-weight: 700 !important;
        }
        
        .border {
            border: 1px solid #dee2e6 !important;
        }
        
        .rounded {
            border-radius: 0.375rem !important;
        }
        
        .bg-light {
            background-color: #f8f9fa !important;
        }
        
        .text-decoration-none:hover {
            text-decoration: underline !important;
        }
        
        @@media (max-width: 768px) {
            .timeline {
                padding-left: 20px;
            }
            
            .timeline-marker {
                left: -15px;
                width: 8px;
                height: 8px;
                border-width: 2px;
            }
            
            .timeline-content {
                margin-left: 10px;
            }
        }
    </style>
}